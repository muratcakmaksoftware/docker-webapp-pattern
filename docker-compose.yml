version: "3.9"

services:
  php:
    restart: always
    container_name: app-php
    build:
      context: ./docker/images/php
      dockerfile: Dockerfile
    working_dir: /var/www/html
    expose:
      - ${PHP_INTERNAL_PORT:-9000}
    volumes:
      - ./:/var/www/html
    networks:
      default:
        ipv4_address: 172.20.0.10

  web:
    restart: always
    container_name: app-nginx
    build:
      context: ./docker/images/nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    networks:
      default:
        ipv4_address: 172.20.0.20

  #PHP > Dockerfile göre gerekli kütüphaneleri ayarlanması gerekir. Default olarak postgresql alınmıştır.
  postgresql:
    restart: always
    container_name: app-postgresql
    build:
      context: ./docker/images/postgresql
      dockerfile: Dockerfile
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-db_name}
      POSTGRES_USER: ${POSTGRES_USER:-root}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-123456}
    ports:
      - '5432:5432'
    volumes:
      - ./docker/images/postgresql/data:/var/lib/postgresql/data
    networks:
      default:
        ipv4_address: 172.20.0.30

  #PHP > Dockerfile göre gerekli kütüphaneleri ayarlanması gerekir. Mysql kullanacaksanız PHP Dockerfile kütüphanelerini düzeltiniz.
  #  mysql:
  #    restart: always
  #    container_name: app-mysql
  #    build:
  #      context: ./docker/images/mysql
  #      dockerfile: Dockerfile
  #    environment:
  #      MYSQL_DATABASE: ${MYSQL_DATABASE:-db_name}
  #      MYSQL_USER: ${MYSQL_USER:-db_user_name}
  #      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-123456}
  #      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-12346789}
  #    ports:
  #      - "3306:3306"
  #    volumes:
  #      - ./images/mysql/data:/var/lib/mysql
  #    networks:
  #      default:
  #        ipv4_address: 172.20.0.35

  redis:
    restart: always
    container_name: app-redis
    build:
      context: ./docker/images/redis
      dockerfile: Dockerfile
    ports:
      - "6379:6379"
    volumes:
      - ./docker/images/redis/data:/data
    networks:
      default:
        ipv4_address: 172.20.0.40

  rabbitmq:
    restart: always
    container_name: app-rabbitmq
    build:
      context: ./docker/images/rabbitmq
      dockerfile: Dockerfile
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./docker/images/rabbitmq/data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-guest}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_DEFAULT_VHOST:-my_host_name}
    networks:
      default:
        ipv4_address: 172.20.0.50

networks:
  default:
    driver: bridge
    name: default_network
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  myapp:
    driver: local